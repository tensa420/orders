services:
  postgres:
    image: postgres:16
    container_name: mypostgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-go-server
    ports:
      - "${APP_PORT}:8080"
    env_file:
      - ./.env
    environment:
      - DB_URI=${DB_URI}
      - MIGRATIONS_DIR=${MIGRATIONS_DIR}
      - APP_PORT=${APP_PORT}
      - INVENTORY_ADRESS=${INVENTORY_ADRESS}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network


networks:
  app-network:
    external: true
    name: app-network


volumes:
  pgdata:
  mongodata:
