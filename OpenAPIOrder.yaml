openapi: 3.0.3

info:
  title: Order API
  version: 1.0.0
  description:
    Описание всего функционала Order API

servers:
  - url: http://localhost:8080

paths:
  /api/v1/orders:
    post:
      summary: Создает новый заказ на основе деталей
      operationId: HandleCreateOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Ваш заказ успешно сформирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/v1/orders/{order_uuid}/pay:
    post:
      summary: Проводит оплату заказа
      operationId: HandlePayOrder
      parameters:
        - name: order_uuid
          in: path
          required: true
          description: UUID заказа
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayOrderRequest'
      responses:
        '200':
          description: Оплата успешно прошла
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/PayOrderResponse'
        '400':
          $ref : '#/components/responses/BadRequest'
        '500':
          $ref : '#/components/responses/InternalError'
  /api/v1/orders/{order_uuid}:
    get:
      summary: Получить заказ по UUID
      operationId: HandleGetOrder
      parameters:
        - name: order_uuid
          in: path
          required: true
          description: UUID заказа
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Ваш заказ найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/v1/orders/{order_uuid}/cancel:
    post:
      summary: Отменить заказ
      operationId: HandleCancelOrder
      parameters:
        - name: order_uuid
          in: path
          required: true
          description: UUID заказа
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Заказ успешно отменен
        '404':
          description: Заказ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Конфликт — заказ уже оплачен и не может быть отменён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    Error:
      type: object
      required: [ code, message ]
      properties:
        code:
          type: string
          example: INVALID_ARGUMENT
        message:
          type: string
          example: "uuid is required"
    CreateOrderResponse:
      type: object
      required: [order_uuid,total_price]
      properties:
        order_uuid:
          type: string
          format: uuid
        total_price:
          type : number
          format: double
    CreateOrderRequest:
      type: object
      required: [user_uuid,part_uuids]
      properties:
        user_uuid:
          type: string
          format : uuid
        part_uuids:
          type: array
          items: {type: string}
    PayOrderRequest:
      type: object
      required: [payment_method]
      properties:
        payment_method:
          type: string
    PayOrderResponse:
      type : object
      required: [transaction_uuid]
      properties:
        transaction_uuid:
          type : string
          format : uuid
    GetOrderResponse:
      type: object
      required: [order_uuid,user_uuid,part_uuids,total_price,status]
      properties:
        order_uuid:
          type: string
          format : uuid
        user_uuid:
          type: string
          format: uuid
        part_uuids:
          type : array
          items: {type: string}
        total_price:
          type : number
          format: double
        transaction_uuid:
          type : string
          format: uuid
          nullable: true
        payment_method:
          type : string
          nullable: true
        status:
          type: string
  responses:
    BadRequest:
      description: Неверный запрос
      content:
        application/json:
          schema: { $ref: '#/components/schemas/Error' }
    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema: { $ref: '#/components/schemas/Error' }
    InternalError:
      description: Внутренняя ошибка
      content:
        application/json:
          schema: { $ref: '#/components/schemas/Error' }