// Code generated by ogen, DO NOT EDIT.

package api

import (
	"github.com/google/uuid"
)

// Ref: #/components/schemas/CreateOrderRequest
type CreateOrderRequest struct {
	UserUUID  uuid.UUID `json:"user_uuid"`
	PartUuids []string  `json:"part_uuids"`
}

// GetUserUUID returns the value of UserUUID.
func (s *CreateOrderRequest) GetUserUUID() uuid.UUID {
	return s.UserUUID
}

// GetPartUuids returns the value of PartUuids.
func (s *CreateOrderRequest) GetPartUuids() []string {
	return s.PartUuids
}

// SetUserUUID sets the value of UserUUID.
func (s *CreateOrderRequest) SetUserUUID(val uuid.UUID) {
	s.UserUUID = val
}

// SetPartUuids sets the value of PartUuids.
func (s *CreateOrderRequest) SetPartUuids(val []string) {
	s.PartUuids = val
}

// Ref: #/components/schemas/CreateOrderResponse
type CreateOrderResponse struct {
	OrderUUID  uuid.UUID `json:"order_uuid"`
	TotalPrice float64   `json:"total_price"`
}

// GetOrderUUID returns the value of OrderUUID.
func (s *CreateOrderResponse) GetOrderUUID() uuid.UUID {
	return s.OrderUUID
}

// GetTotalPrice returns the value of TotalPrice.
func (s *CreateOrderResponse) GetTotalPrice() float64 {
	return s.TotalPrice
}

// SetOrderUUID sets the value of OrderUUID.
func (s *CreateOrderResponse) SetOrderUUID(val uuid.UUID) {
	s.OrderUUID = val
}

// SetTotalPrice sets the value of TotalPrice.
func (s *CreateOrderResponse) SetTotalPrice(val float64) {
	s.TotalPrice = val
}

func (*CreateOrderResponse) handleCreateOrderRes() {}

// Ref: #/components/schemas/Error
type Error struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// Ref: #/components/schemas/GetOrderResponse
type GetOrderResponse struct {
	OrderUUID       uuid.UUID    `json:"order_uuid"`
	UserUUID        uuid.UUID    `json:"user_uuid"`
	PartUuids       []string     `json:"part_uuids"`
	TotalPrice      float64      `json:"total_price"`
	TransactionUUID OptNilUUID   `json:"transaction_uuid"`
	PaymentMethod   OptNilString `json:"payment_method"`
	Status          string       `json:"status"`
}

// GetOrderUUID returns the value of OrderUUID.
func (s *GetOrderResponse) GetOrderUUID() uuid.UUID {
	return s.OrderUUID
}

// GetUserUUID returns the value of UserUUID.
func (s *GetOrderResponse) GetUserUUID() uuid.UUID {
	return s.UserUUID
}

// GetPartUuids returns the value of PartUuids.
func (s *GetOrderResponse) GetPartUuids() []string {
	return s.PartUuids
}

// GetTotalPrice returns the value of TotalPrice.
func (s *GetOrderResponse) GetTotalPrice() float64 {
	return s.TotalPrice
}

// GetTransactionUUID returns the value of TransactionUUID.
func (s *GetOrderResponse) GetTransactionUUID() OptNilUUID {
	return s.TransactionUUID
}

// GetPaymentMethod returns the value of PaymentMethod.
func (s *GetOrderResponse) GetPaymentMethod() OptNilString {
	return s.PaymentMethod
}

// GetStatus returns the value of Status.
func (s *GetOrderResponse) GetStatus() string {
	return s.Status
}

// SetOrderUUID sets the value of OrderUUID.
func (s *GetOrderResponse) SetOrderUUID(val uuid.UUID) {
	s.OrderUUID = val
}

// SetUserUUID sets the value of UserUUID.
func (s *GetOrderResponse) SetUserUUID(val uuid.UUID) {
	s.UserUUID = val
}

// SetPartUuids sets the value of PartUuids.
func (s *GetOrderResponse) SetPartUuids(val []string) {
	s.PartUuids = val
}

// SetTotalPrice sets the value of TotalPrice.
func (s *GetOrderResponse) SetTotalPrice(val float64) {
	s.TotalPrice = val
}

// SetTransactionUUID sets the value of TransactionUUID.
func (s *GetOrderResponse) SetTransactionUUID(val OptNilUUID) {
	s.TransactionUUID = val
}

// SetPaymentMethod sets the value of PaymentMethod.
func (s *GetOrderResponse) SetPaymentMethod(val OptNilString) {
	s.PaymentMethod = val
}

// SetStatus sets the value of Status.
func (s *GetOrderResponse) SetStatus(val string) {
	s.Status = val
}

func (*GetOrderResponse) handleGetOrderRes() {}

type HandleCancelOrderConflict Error

func (*HandleCancelOrderConflict) handleCancelOrderRes() {}

type HandleCancelOrderInternalServerError Error

func (*HandleCancelOrderInternalServerError) handleCancelOrderRes() {}

// HandleCancelOrderNoContent is response for HandleCancelOrder operation.
type HandleCancelOrderNoContent struct{}

func (*HandleCancelOrderNoContent) handleCancelOrderRes() {}

type HandleCancelOrderNotFound Error

func (*HandleCancelOrderNotFound) handleCancelOrderRes() {}

type HandleCreateOrderBadRequest Error

func (*HandleCreateOrderBadRequest) handleCreateOrderRes() {}

type HandleCreateOrderInternalServerError Error

func (*HandleCreateOrderInternalServerError) handleCreateOrderRes() {}

type HandleGetOrderBadRequest Error

func (*HandleGetOrderBadRequest) handleGetOrderRes() {}

type HandleGetOrderInternalServerError Error

func (*HandleGetOrderInternalServerError) handleGetOrderRes() {}

type HandleGetOrderNotFound Error

func (*HandleGetOrderNotFound) handleGetOrderRes() {}

type HandlePayOrderBadRequest Error

func (*HandlePayOrderBadRequest) handlePayOrderRes() {}

type HandlePayOrderInternalServerError Error

func (*HandlePayOrderInternalServerError) handlePayOrderRes() {}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUUID returns new OptNilUUID with value set to v.
func NewOptNilUUID(v uuid.UUID) OptNilUUID {
	return OptNilUUID{
		Value: v,
		Set:   true,
	}
}

// OptNilUUID is optional nullable uuid.UUID.
type OptNilUUID struct {
	Value uuid.UUID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUUID was set.
func (o OptNilUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUUID) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUUID) SetToNull() {
	o.Set = true
	o.Null = true
	var v uuid.UUID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUUID) Get() (v uuid.UUID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PayOrderRequest
type PayOrderRequest struct {
	PaymentMethod string `json:"payment_method"`
}

// GetPaymentMethod returns the value of PaymentMethod.
func (s *PayOrderRequest) GetPaymentMethod() string {
	return s.PaymentMethod
}

// SetPaymentMethod sets the value of PaymentMethod.
func (s *PayOrderRequest) SetPaymentMethod(val string) {
	s.PaymentMethod = val
}

// Ref: #/components/schemas/PayOrderResponse
type PayOrderResponse struct {
	TransactionUUID uuid.UUID `json:"transaction_uuid"`
}

// GetTransactionUUID returns the value of TransactionUUID.
func (s *PayOrderResponse) GetTransactionUUID() uuid.UUID {
	return s.TransactionUUID
}

// SetTransactionUUID sets the value of TransactionUUID.
func (s *PayOrderResponse) SetTransactionUUID(val uuid.UUID) {
	s.TransactionUUID = val
}

func (*PayOrderResponse) handlePayOrderRes() {}
